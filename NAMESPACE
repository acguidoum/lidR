# Generated by roxygen2: do not edit by hand

S3method(as.list,LASheader)
S3method(as.spatial,LAS)
S3method(as.spatial,LAScatalog)
S3method(as.spatial,lasmetrics)
S3method(catalog_queries,LAScatalog)
S3method(grid_canopy,LAS)
S3method(grid_canopy,LAScatalog)
S3method(grid_canopy,LAScluster)
S3method(grid_metrics,LAS)
S3method(grid_metrics,LAScatalog)
S3method(grid_metrics,LAScluster)
S3method(grid_tincanopy,LAS)
S3method(grid_tincanopy,LAScatalog)
S3method(grid_tincanopy,LAScluster)
S3method(lasclipCircle,LAS)
S3method(lasclipCircle,LAScatalog)
S3method(lasclipRectangle,LAS)
S3method(lasclipRectangle,LAScatalog)
S3method(plot,LAS)
S3method(plot,LAScatalog)
S3method(plot,lashexametrics)
S3method(plot,lasmetrics3d)
S3method(readLAS,LAScatalog)
S3method(readLAS,LAScluster)
S3method(readLAS,character)
S3method(rumple_index,RasterLayer)
S3method(rumple_index,numeric)
S3method(summary,LAS)
S3method(tree_detection_lmf,LAS)
S3method(tree_detection_lmf,LAScatalog)
S3method(tree_detection_lmf,LAScluster)
S3method(tree_detection_lmf,RasterLayer)
S3method(tree_detection_lmf,data.frame)
S3method(tree_detection_multichm,LAS)
S3method(tree_detection_multichm,LAScatalog)
S3method(tree_detection_multichm,LAScluster)
S3method(tree_detection_ptrees,LAS)
S3method(tree_detection_ptrees,LAScatalog)
S3method(tree_detection_ptrees,LAScluster)
S3method(tree_metrics,LAS)
S3method(tree_metrics,LAScatalog)
S3method(tree_metrics,LAScluster)
export("buffer<-")
export("by_file<-")
export("cores<-")
export("laz_compression<-")
export("output_files<-")
export("progress<-")
export("stop_early<-")
export("tiling_size<-")
export("vrt<-")
export(.stdmetrics)
export(.stdmetrics_ctrl)
export(.stdmetrics_i)
export(.stdmetrics_pulse)
export(.stdmetrics_rn)
export(.stdmetrics_z)
export(.stdtreemetrics)
export(LAD)
export(LAS)
export(VCI)
export(area)
export(as.spatial)
export(buffer)
export(by_file)
export(catalog)
export(catalog_apply)
export(catalog_queries)
export(catalog_retile)
export(catalog_select)
export(cores)
export(entropy)
export(forest.colors)
export(gap_fraction_profile)
export(grid_canopy)
export(grid_density)
export(grid_hexametrics)
export(grid_metrics)
export(grid_metrics3d)
export(grid_terrain)
export(grid_terrain_delaunay)
export(grid_terrain_knnidw)
export(grid_terrain_kriging)
export(grid_tincanopy)
export(height.colors)
export(lasadddata)
export(lasaddextrabytes)
export(lasaddextrabytes_manual)
export(lasclassify)
export(lasclip)
export(lasclipCircle)
export(lasclipPolygon)
export(lasclipRectangle)
export(lascolor)
export(lasfilter)
export(lasfilterdecimate)
export(lasfilterfirst)
export(lasfilterfirstlast)
export(lasfilterfirstofmany)
export(lasfilterground)
export(lasfilterlast)
export(lasfilternth)
export(lasfiltersingle)
export(lasfiltersurfacepoints)
export(lasflightline)
export(lasground)
export(lasground_pmf)
export(lasmetrics)
export(lasnormalize)
export(laspulse)
export(lasroi)
export(lasscanline)
export(lassmooth)
export(lassnags)
export(lassnags_wing)
export(lastrees)
export(lastrees_dalponte)
export(lastrees_hamraz)
export(lastrees_li)
export(lastrees_li2)
export(lastrees_mcwatershed)
export(lastrees_ptrees)
export(lastrees_silva)
export(lastrees_watershed)
export(lasunnormalize)
export(lasunsmooth)
export(laz_compression)
export(lidr_options)
export(lidr_reset)
export(output_files)
export(pastel.colors)
export(plot3d)
export(progress)
export(random.colors)
export(readLAS)
export(rumple_index)
export(stdmetrics)
export(stdmetrics_ctrl)
export(stdmetrics_i)
export(stdmetrics_pulse)
export(stdmetrics_rn)
export(stdmetrics_z)
export(stdtreemetrics)
export(stop_early)
export(tiling_size)
export(tree_detection)
export(tree_detection_lmf)
export(tree_detection_manual)
export(tree_detection_multichm)
export(tree_detection_ptrees)
export(tree_hulls)
export(tree_metrics)
export(util_makeZhangParam)
export(vrt)
export(writeLAS)
exportClasses(LAS)
exportClasses(LASheader)
exportMethods("-")
exportMethods(area)
exportMethods(extent)
import(data.table)
import(methods)
importClassesFrom(sp,CRS)
importClassesFrom(sp,SpatialPolygonsDataFrame)
importFrom(data.table,":=")
importMethodsFrom(raster,area)
importMethodsFrom(raster,extent)
useDynLib(lidR, .registration = TRUE)
