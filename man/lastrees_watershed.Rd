% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/lastrees_watershed.r
\name{lastrees_watershed}
\alias{lastrees_watershed}
\alias{lastrees_mcwatershed}
\title{Individual tree segmentation}
\usage{
lastrees_watershed(las, chm, th_tree = 2, tol = 1, ext = 1,
  extra = FALSE, field = "treeID")

lastrees_mcwatershed(las, chm, treetops, th_tree = 2, extra = FALSE,
  field = "treeID")
}
\arguments{
\item{las}{An object of the class \code{LAS}. If missing \code{extra} is turned to \code{TRUE}
automatically.}

\item{chm}{RasterLayer. Image of the canopy. Can be computed with \link{grid_canopy} or read  from
an external file.}

\item{th_tree}{numeric. Threshold below which a pixel cannot be a tree. Default 2.}

\item{tol}{numeric. Tolerance see ?EBImage::watershed.}

\item{ext}{numeric. see ?EBImage::watershed.}

\item{extra}{logical. By default the function classifies the original point cloud by reference
and return nothing (NULL) i.e. the original point cloud is automatically updated in place. If
\code{extra = TRUE} an additional \code{RasterLayer} used internally can be returned.}

\item{field}{character. If the \code{SpatialPointsDataFrame} contains an attribute with the ID for
each tree, the name of this column. This way, original IDs will be preserved. If there is no scuh data
trees will be numbered sequentially.}

\item{treetops}{\code{SpatialPolygonsDataFrame}. Can be computed with
\link[lidR:tree_detection]{tree_detection} or read from an external shapefile.}
}
\value{
Nothing (NULL), the point cloud is updated by reference. The original point cloud
has a new column named \code{'treeID'} (or something else if the \code{field} option has been changed)
containing an ID for each point that refer to a segmented tree.
If \code{extra = TRUE} the function returns a \code{RasterLayer} used internally.
}
\description{
Individual tree segmentation using watersheds and marker controled watershed.
}
\details{
\strong{Simple watershed} is based on the bioconductor package \code{EBIimage}. You need to install this package
to run this method (see its \href{https://github.com/aoles/EBImage}{github page}). Internally the
function EBImage::watershed is called.\cr\cr
\strong{Marker controlled watershed} is based on the \code{imager} package. Internally the
function \link[imager:watershed]{imager::watershed} is called using the tree tops as priority map.
}
\examples{
LASfile <- system.file("extdata", "MixedConifer.laz", package="lidR")
las = readLAS(LASfile, select = "xyz", filter = "-drop_z_below 0")
col = pastel.colors(250)

chm = grid_canopy(las, "p2r", res = 0.5, subcircle = 0.3)
kernel = matrix(1,3,3)
chm = raster::focal(chm, w = kernel, fun = mean, na.rm = TRUE)

ttops = tree_detection(chm, "lmf", 4, 2)
crowns = lastrees_mcwatershed(las, chm, ttops, extra = TRUE)

\dontrun{
plot(las, color = "treeID", colorPalette = col)
rgl::spheres3d(ttops@coords[,1], ttops@coords[,2], ttops@data$Z, col = "red", size = 5, add = TRUE)

raster::plot(crowns, col = pastel.colors(250))
sp::plot(ttops, add = TRUE)
}
}
\seealso{
Other tree_segmentation: \code{\link{lastrees_dalponte}},
  \code{\link{lastrees_hamraz}}, \code{\link{lastrees_li}},
  \code{\link{lastrees_ptrees}},
  \code{\link{lastrees_silva}}, \code{\link{lastrees}}
}
